{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NH\\\\udemy-react\\\\04.seasons\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // App component has code to figure out location + month\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      // Get users physical location\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return console.log(position);\n      }, function (err) {\n        return console.log(err);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Latitude: \");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), document.querySelector('#root')); // Components will be re-rendered when user's position information is loaded","map":{"version":3,"sources":["C:\\Users\\NH\\udemy-react\\04.seasons\\src\\index.js"],"names":["React","ReactDOM","App","window","navigator","geolocation","getCurrentPosition","position","console","log","err","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;IACMC,G;;;;;;;;;;;;;6BACO;AACL;AACAC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAACC,QAAD;AAAA,eAAcC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAd;AAAA,OADJ,EAEI,UAACG,GAAD;AAAA,eAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAT;AAAA,OAFJ;AAIA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;;;EARaV,KAAK,CAACW,S;;AAWxBV,QAAQ,CAACW,MAAT,CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ,E,CAKA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// App component has code to figure out location + month\nclass App extends React.Component {\n    render() {\n        // Get users physical location\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => console.log(position),\n            (err) => console.log(err)\n        );\n        return <div>Latitude: </div>;\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);\n\n// Components will be re-rendered when user's position information is loaded"]},"metadata":{},"sourceType":"module"}