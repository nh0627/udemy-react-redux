{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay'; // App component has code to figure out user's location and month\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('My component was rendered to the screen'); // Get users physical location\n\n      window.navigator.geolocation.getCurrentPosition(function (position) {\n        return _this2.setState({\n          lat: position.coords.latitude\n        });\n      }, function (err) {\n        return _this2.setState({\n          errorMessage: err.message\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('My component was just updated - it re-rendered!');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.errorMessage && !this.state.lat) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" Error : \", this.state.errorMessage, \" \");\n      }\n\n      if (!this.state.errorMessage && this.state.lat) {\n        return React.createElement(SeasonDisplay, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Loading!\");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["C:\\Users\\NH\\udemy-react\\05.seasons_lifecycle\\src\\index.js"],"names":["React","ReactDOM","SeasonDisplay","App","state","lat","errorMessage","console","log","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","Component","render","document","querySelector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;IACMC,G;;;;;;;;;;;;;;;;;UAIFC,K,GAAQ;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,K;;;;;;wCAEY;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EADgB,CAGhB;;AACAC,MAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACI,UAACC,QAAD;AAAA,eAAc,MAAI,CAACC,QAAL,CAAc;AAAET,UAAAA,GAAG,EAAEQ,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,SAAd,CAAd;AAAA,OADJ,EAEI,UAACC,GAAD;AAAA,eAAS,MAAI,CAACH,QAAL,CAAc;AAACR,UAAAA,YAAY,EAAEW,GAAG,CAACC;AAAnB,SAAd,CAAT;AAAA,OAFJ;AAIH;;;yCAEoB;AACjBX,MAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACH;;;6BACQ;AACL,UAAK,KAAKJ,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA5C,EAAkD;AAC9C,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgB,KAAKD,KAAL,CAAWE,YAA3B,MAAP;AACH;;AACD,UAAK,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA5C,EAAkD;AAC9C,eAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;;;EA3BaL,KAAK,CAACmB,S;;AA8BxBlB,QAAQ,CAACmB,MAAT,CACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\n// App component has code to figure out user's location and month\nclass App extends React.Component {\n\n    // Constructor is not required!\n\n    state = { lat: null, errorMessage: '' };\n\n    componentDidMount() {\n        console.log('My component was rendered to the screen');\n        \n        // Get users physical location\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({ lat: position.coords.latitude }), \n            (err) => this.setState({errorMessage: err.message})\n        );\n    }\n\n    componentDidUpdate() {\n        console.log('My component was just updated - it re-rendered!')\n    }\n    render() {\n        if ( this.state.errorMessage && !this.state.lat ) {\n            return <div> Error : { this.state.errorMessage } </div>\n        }\n        if ( !this.state.errorMessage && this.state.lat ) {\n            return <SeasonDisplay />\n        }\n        return <div>Loading!</div>\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"]},"metadata":{},"sourceType":"module"}