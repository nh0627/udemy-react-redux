{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons_lifecycle\\\\src\\\\SeasonDisplay.js\";\nimport React from 'react'; // Determin season responding to user's latitude\n\nvar getSeason = function getSeason(lat, month) {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat < 0 ? 'summer' : 'winter';\n  }\n}; // SeasonDisplay component shows different text/icons based on props\n\n\nvar SeasonDisplay = function SeasonDisplay(props) {\n  var season = getSeason(props.lat, new Date().getMonth());\n  var text = season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\n  var icon = season === 'winter' ? 'snowflake' : 'sun';\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"\".concat(icon, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, text), React.createElement(\"i\", {\n    className: \"\".concat(icon, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["C:\\Users\\NH\\udemy-react\\05.seasons_lifecycle\\src\\SeasonDisplay.js"],"names":["React","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","text","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACzB,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACF,GAFD,MAEO;AACJ,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACF;AACJ,CAND,C,CAQA;;;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,MAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB;AACA,MAAMC,IAAI,GACNH,MAAM,KAAK,QAAX,GAAsB,oBAAtB,GAA6C,oBADjD;AAEA,MAAMI,IAAI,GACNJ,MAAM,KAAK,QAAX,GAAsB,WAAtB,GAAoC,KADxC;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,YAAKI,IAAL,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAN,CAFJ,EAGI;AAAG,IAAA,SAAS,YAAKC,IAAL,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAdD;;AAgBA,eAAeN,aAAf","sourcesContent":["import React from 'react';\r\n\r\n// Determin season responding to user's latitude\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n       return lat > 0 ? 'summer' : 'winter'; \r\n    } else {\r\n       return lat < 0 ? 'summer' : 'winter'; \r\n    }\r\n}\r\n\r\n// SeasonDisplay component shows different text/icons based on props\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const text = \r\n        season === 'winter' ? 'Burr, it is chilly' : 'Lets hit the beach';\r\n    const icon =\r\n        season === 'winter' ? 'snowflake' : 'sun';\r\n\r\n    return (\r\n        <div>\r\n            <i className={`${icon} icon`} />\r\n            <h1>{ text }</h1>\r\n            <i className={`${icon} icon`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}