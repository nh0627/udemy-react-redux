{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NH\\\\udemy-react\\\\05.seasons\\\\src\\\\SeasonDisplay.js\";\nimport './SeasonDisplay.css';\nimport React from 'react';\nvar seasonConfig = {\n  summer: {\n    text: 'Lets hit the beach!',\n    iconName: 'sun'\n  },\n  winter: {\n    text: 'Burr, it is chilly',\n    iconName: 'snowflake'\n  }\n}; // Determine season responding to user's latitude\n\nvar getSeason = function getSeason(lat, month) {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat < 0 ? 'summer' : 'winter';\n  }\n}; // SeasonDisplay component shows different text/icons based on props\n\n\nvar SeasonDisplay = function SeasonDisplay(props) {\n  var season = getSeason(props.lat, new Date().getMonth());\n  var _seasonConfig$season = seasonConfig[season],\n      text = _seasonConfig$season.text,\n      iconName = _seasonConfig$season.iconName;\n  return React.createElement(\"div\", {\n    className: \"season-display \".concat(season),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"\".concat(iconName, \" icon-left icon massive\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, text), React.createElement(\"i\", {\n    className: \"\".concat(iconName, \" icon-right icon massive\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["C:\\Users\\NH\\udemy-react\\05.seasons\\src\\SeasonDisplay.js"],"names":["React","seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth"],"mappings":";AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE,qBADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADS;AAKjBC,EAAAA,MAAM,EAAE;AACJF,IAAAA,IAAI,EAAE,oBADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AALS,CAArB,C,CAaA;;AACA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,KAAN,EAAgB;AAC9B,MAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAAzB,EAA4B;AACzB,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACF,GAFD,MAEO;AACJ,WAAOA,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACF;AACJ,CAND,C,CAQA;;;AACA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,MAAMC,MAAM,GAAGL,SAAS,CAACI,KAAK,CAACH,GAAP,EAAY,IAAIK,IAAJ,GAAWC,QAAX,EAAZ,CAAxB;AAD6B,6BAEJZ,YAAY,CAACU,MAAD,CAFR;AAAA,MAEtBR,IAFsB,wBAEtBA,IAFsB;AAAA,MAEhBC,QAFgB,wBAEhBA,QAFgB;AAI7B,SACI;AAAK,IAAA,SAAS,2BAAoBO,MAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,YAAKP,QAAL,4BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAN,CAFJ,EAGI;AAAG,IAAA,SAAS,YAAKC,QAAL,6BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAXD;;AAaA,eAAeK,aAAf","sourcesContent":["import './SeasonDisplay.css';\r\nimport React from 'react';\r\n\r\n\r\nconst seasonConfig = {\r\n    summer: {\r\n        text: 'Lets hit the beach!',\r\n        iconName: 'sun'\r\n    },\r\n    winter: {\r\n        text: 'Burr, it is chilly',\r\n        iconName: 'snowflake'\r\n    }\r\n\r\n};\r\n\r\n\r\n// Determine season responding to user's latitude\r\nconst getSeason = (lat, month) => {\r\n    if (month > 2 && month < 9) {\r\n       return lat > 0 ? 'summer' : 'winter'; \r\n    } else {\r\n       return lat < 0 ? 'summer' : 'winter'; \r\n    }\r\n}\r\n\r\n// SeasonDisplay component shows different text/icons based on props\r\nconst SeasonDisplay = (props) => {\r\n    const season = getSeason(props.lat, new Date().getMonth());\r\n    const {text, iconName} = seasonConfig[season];\r\n\r\n    return (\r\n        <div className={`season-display ${season}`}>\r\n            <i className={`${iconName} icon-left icon massive`} />\r\n            <h1>{ text }</h1>\r\n            <i className={`${iconName} icon-right icon massive`} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SeasonDisplay;"]},"metadata":{},"sourceType":"module"}